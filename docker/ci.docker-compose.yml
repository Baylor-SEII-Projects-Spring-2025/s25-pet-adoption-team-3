services:
  frontend:
    image: pet-adoption-frontend
    build:
      context: ../pet-adoption-frontend
      dockerfile: ../docker/pet-adoption-frontend.Dockerfile
    restart: always
    ports:
      - '3000:3000'

  api:
    image: pet-adoption-api
    build:
      context: ../pet-adoption-api
      dockerfile: ../docker/pet-adoption-api.Dockerfile
    restart: always
    ports:
      - '8080:8080'
    environment:
      MYSQL_HOST: db
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/gcp-key.json
    volumes:
      - ./adopt-dont-shop-450021-353d283bffc9.json:/secrets/gcp-key.json
  db:
    image: mysql:8.4.2
    command: --mysql-native-password=ON
    restart: always
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: petadoption
    volumes:
      - mysql-data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    entrypoint: >
      sh -c "
        docker-entrypoint.sh mysqld & 
        sleep 10 && 
        mysql -u root -p$${MYSQL_ROOT_PASSWORD} -e 'CREATE DATABASE IF NOT EXISTS petadoption;' &&
        mysql -u root -p$${MYSQL_ROOT_PASSWORD} petadoption < /docker-entrypoint-initdb.d/init.sql &&
        wait
      "

volumes:
  mysql-data:

# Note: we are taking advantage of the Docker network that is automatically created so
# that these containers are able to communicate with each other.